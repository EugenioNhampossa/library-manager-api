generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = "postgresql://postgres:RvwKSCYrIzqhkB6u@db.xxegezshcrwjsilabhjn.supabase.co:5432/postgres"
// }
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model Livro {
  id           String       @default(uuid())
  titulo       String
  idAutor      String
  local        String?
  idEditora    String
  idCategoria  String
  ano          Int?
  edicao       Int?
  volume       Int?
  nrPaginas    Int
  observacoes  String
  dataRegistro DateTime     @default(now())
  nrCopias     Int
  editora      Editora      @relation(fields: [idEditora], references: [id])
  categoria    Categoria    @relation(fields: [idCategoria], references: [id])
  autor        Autor        @relation(fields: [idAutor], references: [id])
  Emprestimo   Emprestimo[]
  Aquisicao    Aquisicao[]

  @@unique([id])
}

model Autor {
  id       String    @default(uuid())
  nome     String
  apelido  String
  dataNasc DateTime?
  Livro    Livro[]

  @@unique([id])
}

model Categoria {
  id        String  @default(uuid())
  titulo    String  @unique
  descricao String
  Livro     Livro[]

  @@unique([id])
}

model Editora {
  id       String  @default(uuid())
  nome     String  @unique
  endereco String?
  telefone String?
  Livro    Livro[]

  @@unique([id])
}

model Multa {
  id         String       @default(uuid())
  valor      Decimal
  dataPag    DateTime?
  Emprestimo Emprestimo[]

  @@unique([id])
}

model Funcionario {
  id         String       @default(uuid())
  nome       String
  apelido    String
  nrBI       String       @unique
  idUsuario  String
  usuario    Usuario      @relation(fields: [idUsuario], references: [id])
  Emprestimo Emprestimo[]
  Aquisicao  Aquisicao[]

  @@unique([id])
}

model Usuario {
  id          String        @default(uuid())
  nomeUsuario String        @unique
  senha       String
  funcao      String
  Membro      Membro[]
  Funcionario Funcionario[]

  @@unique([id])
}

model Aquisicao {
  id            String      @default(uuid())
  idFuncionario String
  idLivro       String
  nrCopias      Int
  dataAquisicao DateTime    @default(now())
  funcionario   Funcionario @relation(fields: [idFuncionario], references: [id])
  livro         Livro       @relation(fields: [idLivro], references: [id])

  @@unique([id])
}

model Membro {
  id         String       @default(uuid())
  nome       String
  apelido    String
  nrBI       String       @unique
  idUsuario  String
  usuario    Usuario      @relation(fields: [idUsuario], references: [id])
  Emprestimo Emprestimo[]

  @@unique([id])
}

model Emprestimo {
  id            String      @unique @default(uuid())
  idLivro       String
  idMembro      String
  idFuncEmp     String
  dataInicio    DateTime    @default(now())
  dataFim       DateTime
  dataDevolucao DateTime?
  idFuncDev     String?
  idMulta       String?
  devolvido     Boolean     @default(false)
  funcinonario  Funcionario @relation(fields: [idFuncEmp], references: [id])
  multa         Multa?       @relation(fields: [idMulta], references: [id])
  livro         Livro       @relation(fields: [idLivro], references: [id])
  membro        Membro      @relation(fields: [idMembro], references: [id])

  @@unique([id, idLivro])
}
